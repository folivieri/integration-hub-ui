/*
 * Integration Hub API
 * This API is used to create the items necessary for the SkyHive IntegrationHub product to consume
 *
 * OpenAPI spec version: 1.0.1
 * Contact: fred@skyhive.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from "../ApiClient";
import {PartnerSystem} from '../model/PartnerSystem';

/**
* IntegrationHubUIState service.
* @module api/IntegrationHubUIStateApi
* @version 1.0.1
*/
export class IntegrationHubUIStateApi {

    /**
    * Constructs a new IntegrationHubUIStateApi. 
    * @alias module:api/IntegrationHubUIStateApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the updateIntegrationCustomer operation.
     * @callback moduleapi/IntegrationHubUIStateApi~updateIntegrationCustomerCallback
     * @param {String} error Error message, if any.
     * @param {'String'{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Send the UI state to the back end to sync with the back end
     * Updates Integration Customer partner systems and
     * @param {Object} opts Optional parameters
     * @param {{String: PartnerSystem}} opts.body 
     * @param {module:api/IntegrationHubUIStateApi~updateIntegrationCustomerCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    updateIntegrationCustomer(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = 'String';

      return this.apiClient.callApi(
        '/state', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}